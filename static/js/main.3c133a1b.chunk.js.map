{"version":3,"sources":["dal/api.ts","bll/reducer.ts","components/ModalWindow.tsx","components/HighLight.tsx","components/TableUsers.tsx","components/Main.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","components/styles.module.css"],"names":["instance","axios","create","baseURL","userApi","get","InitialState","getUsersTC","dispatch","then","res","type","users","data","catch","err","console","log","ModalWindow","props","Modal","open","modal","onClose","handleClose","Box","sx","position","top","left","transform","minWidth","bgcolor","border","boxShadow","p","Typography","id","variant","component","mt","user","address","city","street","suite","company","name","HighLight","searchTerm","str","regexp","RegExp","matchValue","match","split","map","value","index","array","length","first","shift","className","styles","highlight","TableUsers","useState","setUser","setModal","useDispatch","light","useCallback","showModal","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","filter","toLowerCase","includes","email","username","onClick","IconButton","userId","removeUserAC","Delete","Main","setSearchTerm","useSelector","store","useEffect","input","placeholder","onChange","e","currentTarget","Button","style","backgroundColor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","state","action","u","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3c133a1b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://jsonplaceholder.typicode.com',\r\n})\r\n\r\n\r\nexport const userApi = {\r\n    getUsers(){\r\n        return instance.get<UserType[]>('users')\r\n    }\r\n}\r\n\r\nexport type UserType = {\r\n    \"id\": number\r\n    \"name\": string\r\n    \"username\": string\r\n    \"email\": string\r\n    \"address\": {\r\n        \"street\": string\r\n        \"suite\": string\r\n        \"city\": string\r\n        \"zipcode\": string\r\n        \"geo\": {\r\n            \"lat\": string\r\n            \"lng\": string\r\n        }\r\n    },\r\n    \"phone\": string\r\n    \"website\": string\r\n    \"company\": {\r\n        \"name\": string\r\n        \"catchPhrase\": string\r\n        \"bs\": string\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {userApi, UserType} from \"../dal/api\";\r\n\r\nconst InitialState: UserType[] = []\r\n\r\n\r\nexport const usersReducer = (state: UserType[] = InitialState, action: AllActionType): UserType[] => {\r\n    switch (action.type) {\r\n        case \"GET-USER\":\r\n            return action.users\r\n        case \"REMOVE-USER\":\r\n            return action.users.filter(u => u.id !== action.userId)\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setUserAC = (users: UserType[]) => {\r\n    return {\r\n        type: \"GET-USER\",\r\n        users,\r\n    } as const\r\n}\r\n\r\nexport const removeUserAC = (userId: number, users: UserType[]) => {\r\n    return {\r\n        type: \"REMOVE-USER\",\r\n        userId,\r\n        users,\r\n    } as const\r\n}\r\n\r\nexport const getUsersTC = () => (dispatch: Dispatch) => {\r\n    userApi.getUsers()\r\n        .then(res => {\r\n            dispatch(setUserAC(res.data))\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\ntype SetUserType = ReturnType<typeof setUserAC>\r\ntype RemoveUserType = ReturnType<typeof removeUserAC>\r\n\r\ntype AllActionType = SetUserType | RemoveUserType","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport {UserType} from \"../dal/api\";\r\n\r\n\r\ntype ModalWindowType = {\r\n    user: UserType | null\r\n    handleClose: () => void\r\n    modal: boolean\r\n}\r\n\r\n\r\nexport const ModalWindow = (props: ModalWindowType) => {\r\n    const style = {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        minWidth: '30%',\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    return <div>\r\n        <Modal\r\n            open={props.modal}\r\n            onClose={props.handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n            <Box sx={style}>\r\n                <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    User information\r\n                </Typography>\r\n                <Typography id=\"modal-modal-description\" sx={{mt: 2}}>\r\n                    I live\r\n                    in: {props.user?.address.city + ' ' + props.user?.address.street + ' ' + props.user?.address.suite} and\r\n                    I work at: {props.user?.company.name}\r\n                </Typography>\r\n            </Box>\r\n        </Modal>\r\n    </div>\r\n}","import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\ntype HighLightType = {\r\n    searchTerm: string\r\n    str: any\r\n}\r\n\r\nexport const HighLight = (props: HighLightType) => {\r\n    if (!props.searchTerm) return props.str\r\n    const regexp = new RegExp(props.searchTerm, 'ig')\r\n    const matchValue = props.str.match(regexp)\r\n    if (matchValue) {\r\n        return props.str.split(regexp).map((value: string, index: number, array: string[]) => {\r\n            if (index < array.length - 1) {\r\n                const first = matchValue.shift()\r\n                return <span key={index}>{value}<span className={styles.highlight}>{first}</span></span>\r\n            }\r\n            return value\r\n        })\r\n    }\r\n    return props.str\r\n}\r\n","import Paper from \"@mui/material/Paper\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport {IconButton, Table} from \"@mui/material\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {ModalWindow} from \"./ModalWindow\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport React, {useCallback, useState} from \"react\";\r\nimport {HighLight} from \"./HighLight\";\r\nimport {UserType} from \"../dal/api\";\r\nimport {removeUserAC} from \"../bll/reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype TableType = {\r\n    users: UserType[]\r\n    searchTerm: string\r\n}\r\n\r\n\r\nexport function TableUsers(props: TableType) {\r\n    const [user, setUser] = useState<UserType | null>(null)\r\n    const [modal, setModal] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const removeUser = (id: number, users: Array<UserType>) => {\r\n        dispatch(removeUserAC(id, users))\r\n    }\r\n\r\n    const light = useCallback((str: string) => {\r\n        return <HighLight searchTerm={props.searchTerm} str={str}/>\r\n    }, [props.searchTerm])\r\n\r\n    const showModal = (user: UserType) => {\r\n        setUser(user)\r\n        setModal(true)\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setModal(false)\r\n    }\r\n\r\n    return <div>\r\n        <TableContainer component={Paper}>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell align=\"center\">Name</TableCell>\r\n                        <TableCell align=\"center\">Username</TableCell>\r\n                        <TableCell align=\"center\">email</TableCell>\r\n                        <TableCell align=\"center\">delete</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.users.filter((value) => {\r\n                        if (props.searchTerm === '') {\r\n                            return value\r\n                        } else if (value.name.toLowerCase().includes(props.searchTerm.toLowerCase())) {\r\n                            return value\r\n                        } else if (value.email.toLowerCase().includes(props.searchTerm.toLowerCase())) {\r\n                            return value\r\n                        } else if (value.username.toLowerCase().includes(props.searchTerm.toLowerCase())) {\r\n                            return value\r\n                        }\r\n                    }).map((user) => (\r\n                        <TableRow\r\n                            key={user.id}\r\n                        >\r\n                            <TableCell align=\"center\" onClick={() => {\r\n                                showModal(user)\r\n                            }}>\r\n                                {light(user.name)}\r\n                            </TableCell>\r\n                            <TableCell align=\"center\" onClick={() => {\r\n                                showModal(user)\r\n                            }}>{light(user.username)}</TableCell>\r\n                            <TableCell align=\"center\" onClick={() => {\r\n                                showModal(user)\r\n                            }}>{light(user.email)} </TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <IconButton onClick={() => {\r\n                                    removeUser(user.id, props.users)\r\n                                }}>\r\n                                    <Delete/>\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            {modal && <ModalWindow user={user} handleClose={handleClose} modal={modal}/>}\r\n        </TableContainer>\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../bll/store\";\r\nimport {getUsersTC} from \"../bll/reducer\";\r\nimport {UserType} from '../dal/api';\r\nimport {Button} from \"@mui/material\";\r\nimport styles from \"./styles.module.css\"\r\nimport {TableUsers} from \"./TableUsers\";\r\n\r\n\r\nexport const Main = () => {\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const dispatch = useDispatch()\r\n    const users = useSelector<AppStateType, UserType[]>(store => store.users)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC())\r\n    }, [dispatch])\r\n\r\n    const returnUser = () => {\r\n        dispatch(getUsersTC())\r\n        setSearchTerm('')\r\n    }\r\n\r\n\r\n    return <div>\r\n        <input value={searchTerm} className={styles.input} type=\"text\" placeholder=\"Search...\" onChange={e => {\r\n            setSearchTerm(e.currentTarget.value)\r\n        }}/>\r\n        <Button style={{backgroundColor: 'greenyellow'}} variant=\"contained\" onClick={returnUser}>RESET</Button>\r\n        <TableUsers users={users} searchTerm={searchTerm}/>\r\n\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport {Main} from \"./components/Main\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Main/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport { usersReducer} from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    users: usersReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__imdaW\",\"highlight\":\"styles_highlight__1yd6_\"};"],"sourceRoot":""}